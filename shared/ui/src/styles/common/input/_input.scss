@use '../../layout//media-queries/breakpoints' as breakpoints;

.rapid-input {
    position: relative;
    width: 100%;
    box-sizing: border-box;

    @include breakpoints.breakpoint(sm) {
        min-width: 14rem;
    }

    &__message {
        position: absolute;
        font-size: .725rem;
        bottom: -1rem;
        left: 1rem;
        white-space: nowrap;

        &--warn {
            color: var(--destructive);
        }
    }

    &__clear-icon {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        right: 1rem;
        font-size: .8rem;
        color: var(--disabled-deep);
        transition: .3s color ease;

        &--password {
            &:hover {
                cursor: pointer;
                color: var(--border-grey-deep);
            }
        }

        &--warn {
            color: var(--destructive);

            &:hover {
                color: var(--destructive);
                cursor: unset;
            }
        }

        &--success {
            color: var(--success);

            &:hover {
                cursor: unset;
                color: var(--success);
            }
        }

        &--close {
            &:hover {
                cursor: pointer;
                color: var(--border-grey-deep);
            }
        }
    }

    &__label {
        position: absolute;
        top: 0;
        transform: translateY(-50%);
        left: calc(1rem - .3rem);
        font-size: .725rem;
        font-weight: 500;
        padding: 0 .3rem;
        background-color: var(--primary-white);
    }

    & input {
        all: unset;
        box-sizing: border-box;
        border: 1px solid var(--disabled-deep);
        border-radius: .5rem;
        min-height: 2.65rem;
        width: 100%;
        padding: 0 1rem;
        font-size: .8rem;
        transition: border .1s ease;

        &:hover {
            border: 1px solid var(--border-grey-deep);
        }

        &:focus {
            border: 1px solid var(--border-grey-deep);
            border-color: var(--primary-action-mat);
        }

        &:active {
            border: 1px solid var(--border-grey-deep);
        }

        &:not(:focus):hover::placeholder {
            transition: color .2s ease;
            color: var(--border-grey-deep);
        }

        &:not(:focus)::placeholder {
            transition: color .2s ease;
        }
    
        &::placeholder {
            color: var(--border-grey);
        }

        &:focus::placeholder {
            color: transparent;
        }

        &:disabled {
            user-select: none;
            pointer-events: none;
            background-color: var(--disabled-background);
            color: var(--disabled-deep);
            border: 1px solid var(--border-grey);

            & ~ label {
                opacity: 0;
            }
        }
    }

    &--warn {
        & input {
            border-color: var(--destructive);

            &:hover {
                border-color: var(--destructive-deep);
            }

            &:active {
                border-color: var(--destructive-deep);
            }

            &:focus {
                border-color: var(--destructive-deep);
            }
        }
    }
}